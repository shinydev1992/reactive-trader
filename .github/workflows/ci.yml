name: CI

on:
  push:
    branches: 
      - master
      - release/**
  pull_request:
    branches:
      - master
      - release/**

jobs:
  build:
    runs-on: ubuntu-latest

    env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch origin +refs/tags/*:refs/tags/*

      - name: Get build version
        run: echo ::set-env name=BUILD_VERSION::$(git describe)

      - name: Build Docker images
        run: docker-compose -f ./src/docker-compose.yml build --parallel

      - name: Set up test data
        run: |
          # The eventstore should be initialised with a clean set of data
          docker-compose -f src/docker-compose.yml run initialise
          docker commit eventstore_base ${DOCKER_USER}/eventstore:${BUILD_VERSION}

      - name: Run integration tests
        run: docker-compose -f ./src/docker-compose.e2e.yml -f ./src/docker-compose.yml run integration

      - name: Run end-to-end tests
        run: docker-compose -f ./src/docker-compose.e2e.yml -f ./src/docker-compose.yml run e2e

      - name: Push Docker images
        if: github.event_name == 'push'
        run: |
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker-compose -f src/docker-compose.yml push

      - name: Set deployment environment (dev)
        if: (github.event_name == 'push') && (github.ref == 'refs/heads/master')
        run: echo "::set-env name=DEPLOY_ENV::dev"

      - name: Set deployment environment (uat)
        if: (github.event_name == 'push') && (startsWith(github.ref, 'refs/heads/release/'))
        run: |
          echo "::set-env name=DEPLOY_ENV::uat"

      - name: Trigger deployment
        if: github.event_name == 'push'
        uses: chrnorm/deployment-action@releases/v1
        with:
          token: ${{ secrets.DEPLOY_TOKEN }}
          environment: ${{ env.DEPLOY_ENV }}